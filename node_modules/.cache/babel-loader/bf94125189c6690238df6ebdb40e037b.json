{"ast":null,"code":"var _jsxFileName = \"D:\\\\GidHub Progects\\\\REACT\\\\goit-react-hw-03-image-finder\\\\src\\\\components\\\\Modal\\\\Modal.jsx\";\nimport React, { Component } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport PropTypes from 'prop-types'; // import { IconContext } from 'react-icons';\n// import { MdClose } from 'react-icons/md';\n\nimport { Overlay, ModalContainer, CloseButton, LargeImg } from './Modal.styled';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.getElementById('modal-root');\n\nclass Modal extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.onKeyDown = e => {\n      if (e.code === 'Escape') {\n        this.props.onClose();\n      }\n\n      ;\n    };\n\n    this.onBackdropClick = e => {\n      if (e.currentTarget === e.target) {\n        this.props.onClose();\n      }\n\n      ;\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.onKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.onKeyDown);\n  }\n\n  render() {\n    const {\n      largeImageURL,\n      alt,\n      onClose\n    } = this.props;\n    return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(Overlay, {\n      onClick: this.onBackdropClick,\n      children: /*#__PURE__*/_jsxDEV(ModalContainer, {\n        children: [/*#__PURE__*/_jsxDEV(CloseButton, {\n          type: \"button\",\n          onClick: onClose,\n          children: /*#__PURE__*/_jsxDEV(IconContext.Provider, {\n            value: {\n              size: \"2.5em\"\n            },\n            children: /*#__PURE__*/_jsxDEV(MdClose, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(LargeImg, {\n          src: largeImageURL,\n          alt: alt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), modalRoot);\n  }\n\n}\n\n;\nexport default Modal;\nModal.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["D:/GidHub Progects/REACT/goit-react-hw-03-image-finder/src/components/Modal/Modal.jsx"],"names":["React","Component","createPortal","PropTypes","Overlay","ModalContainer","CloseButton","LargeImg","modalRoot","document","getElementById","Modal","onKeyDown","e","code","props","onClose","onBackdropClick","currentTarget","target","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","largeImageURL","alt","size","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;AACA;;AACA,SAASC,OAAT,EAAkBC,cAAlB,EAAkCC,WAAlC,EAA+CC,QAA/C,QAA+D,gBAA/D;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAT,CAAwB,YAAxB,CAAlB;;AAEA,MAAMC,KAAN,SAAoBV,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAS1BW,SAT0B,GASdC,CAAC,IAAI;AACb,UAAIA,CAAC,CAACC,IAAF,KAAW,QAAf,EAAyB;AACrB,aAAKC,KAAL,CAAWC,OAAX;AACH;;AAAA;AACJ,KAbyB;;AAAA,SAe1BC,eAf0B,GAeRJ,CAAC,IAAI;AACnB,UAAIA,CAAC,CAACK,aAAF,KAAoBL,CAAC,CAACM,MAA1B,EAAkC;AAC9B,aAAKJ,KAAL,CAAWC,OAAX;AACH;;AAAA;AACJ,KAnByB;AAAA;;AAC1BI,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKV,SAAxC;AACH;;AAEDW,EAAAA,oBAAoB,GAAG;AACnBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsC,KAAKZ,SAA3C;AACH;;AAcDa,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA,aAAF;AAAiBC,MAAAA,GAAjB;AAAsBX,MAAAA;AAAtB,QAAkC,KAAKD,KAA7C;AAEA,wBAAOb,YAAY,eACf,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKe,eAAvB;AAAA,6BACI,QAAC,cAAD;AAAA,gCACI,QAAC,WAAD;AAAa,UAAA,IAAI,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAED,OAApC;AAAA,iCACI,QAAC,WAAD,CAAa,QAAb;AAAsB,YAAA,KAAK,EAAE;AAAEY,cAAAA,IAAI,EAAE;AAAR,aAA7B;AAAA,mCACI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,QAAD;AAAU,UAAA,GAAG,EAAEF,aAAf;AAA8B,UAAA,GAAG,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADe,EAWfnB,SAXe,CAAnB;AAaH;;AArCyB;;AAsC7B;AAED,eAAeG,KAAf;AAEAA,KAAK,CAACkB,SAAN,GAAkB;AACdH,EAAAA,aAAa,EAAEvB,SAAS,CAAC2B,MAAV,CAAiBC,UADlB;AAEdJ,EAAAA,GAAG,EAAExB,SAAS,CAAC2B,MAAV,CAAiBC,UAFR;AAGdf,EAAAA,OAAO,EAAEb,SAAS,CAAC6B,IAAV,CAAeD;AAHV,CAAlB","sourcesContent":["import React, { Component } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport PropTypes from 'prop-types';\r\n// import { IconContext } from 'react-icons';\r\n// import { MdClose } from 'react-icons/md';\r\nimport { Overlay, ModalContainer, CloseButton, LargeImg } from './Modal.styled';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.onKeyDown);\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.onKeyDown);\r\n    };\r\n\r\n    onKeyDown = e => {\r\n        if (e.code === 'Escape') {\r\n            this.props.onClose();\r\n        };\r\n    };\r\n\r\n    onBackdropClick = e => {\r\n        if (e.currentTarget === e.target) {\r\n            this.props.onClose();\r\n        };\r\n    };\r\n\r\n    render() {\r\n        const { largeImageURL, alt, onClose } = this.props;\r\n\r\n        return createPortal(\r\n            <Overlay onClick={this.onBackdropClick}>\r\n                <ModalContainer>\r\n                    <CloseButton type=\"button\" onClick={onClose}>\r\n                        <IconContext.Provider value={{ size: \"2.5em\" }} >\r\n                            <MdClose />\r\n                        </IconContext.Provider>\r\n                    </CloseButton>\r\n                    <LargeImg src={largeImageURL} alt={alt} />\r\n                </ModalContainer>\r\n            </Overlay>,\r\n            modalRoot,\r\n        );\r\n    };\r\n};\r\n\r\nexport default Modal;\r\n\r\nModal.propTypes = {\r\n    largeImageURL: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n};"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\GidHub Progects\\\\REACT\\\\goit-react-hw-03-image-finder\\\\src\\\\components\\\\Modal\\\\Modal.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types'; // ? import PORTAL\n\nimport { createPortal } from 'react-dom';\nimport styles from './Modal.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst modalRoot = document.querySelector('#modal__root');\n\nclass Modal extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleKeyDown = e => {\n      if (e.code === 'Escape') {\n        this.props.funcClose();\n      }\n    };\n\n    this.handlerClick = e => {\n      if (e.currentTarget === e.target) {\n        this.props.funcClose();\n      }\n    };\n  }\n\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  } // ? func\n\n\n  render() {\n    const {\n      id,\n      big\n    } = this.props.value;\n    return /*#__PURE__*/createPortal( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.overlay,\n      onClick: this.handlerClick,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.modal,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: styles.img,\n          src: big,\n          alt: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), modalRoot);\n  }\n\n}\n\nModal.propTypes = {\n  value: PropTypes.shape({\n    big: PropTypes.string.isRequired,\n    id: PropTypes.number.isRequired,\n    small: PropTypes.string.isRequired\n  }),\n  funcClose: PropTypes.func.isRequired\n};\nexport default Modal;","map":{"version":3,"sources":["D:/GidHub Progects/REACT/goit-react-hw-03-image-finder/src/components/Modal/Modal.js"],"names":["React","Component","PropTypes","createPortal","styles","modalRoot","document","querySelector","Modal","handleKeyDown","e","code","props","funcClose","handlerClick","currentTarget","target","componentDidMount","window","addEventListener","componentWillUnmount","removeEventListener","render","id","big","value","overlay","modal","img","propTypes","shape","string","isRequired","number","small","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CACA;;AACA,SAASC,YAAT,QAA6B,WAA7B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,CAAlB;;AAEA,MAAMC,KAAN,SAAoBP,SAApB,CAA8B;AAAA;AAAA;;AAAA,SAU5BQ,aAV4B,GAUZC,CAAC,IAAI;AACnB,UAAIA,CAAC,CAACC,IAAF,KAAW,QAAf,EAAyB;AACvB,aAAKC,KAAL,CAAWC,SAAX;AACD;AACF,KAd2B;;AAAA,SAgB5BC,YAhB4B,GAgBbJ,CAAC,IAAI;AAClB,UAAIA,CAAC,CAACK,aAAF,KAAoBL,CAAC,CAACM,MAA1B,EAAkC;AAChC,aAAKJ,KAAL,CAAWC,SAAX;AACD;AACF,KApB2B;AAAA;;AAC5BI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmC,KAAKV,aAAxC;AACD;;AAEDW,EAAAA,oBAAoB,GAAG;AACrBF,IAAAA,MAAM,CAACG,mBAAP,CAA2B,SAA3B,EAAsC,KAAKZ,aAA3C;AACD,GAP2B,CAS5B;;;AAaAa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,EAAF;AAAMC,MAAAA;AAAN,QAAc,KAAKZ,KAAL,CAAWa,KAA/B;AAEA,wBAAOtB,YAAY,eACjB;AAAK,MAAA,SAAS,EAAEC,MAAM,CAACsB,OAAvB;AAAgC,MAAA,OAAO,EAAE,KAAKZ,YAA9C;AAAA,6BACE;AAAK,QAAA,SAAS,EAAEV,MAAM,CAACuB,KAAvB;AAAA,+BACE;AAAK,UAAA,SAAS,EAAEvB,MAAM,CAACwB,GAAvB;AAA4B,UAAA,GAAG,EAAEJ,GAAjC;AAAsC,UAAA,GAAG,EAAED;AAA3C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADiB,EAMjBlB,SANiB,CAAnB;AAQD;;AAjC2B;;AAoC9BG,KAAK,CAACqB,SAAN,GAAkB;AAChBJ,EAAAA,KAAK,EAAEvB,SAAS,CAAC4B,KAAV,CAAgB;AACrBN,IAAAA,GAAG,EAAEtB,SAAS,CAAC6B,MAAV,CAAiBC,UADD;AAErBT,IAAAA,EAAE,EAAErB,SAAS,CAAC+B,MAAV,CAAiBD,UAFA;AAGrBE,IAAAA,KAAK,EAAEhC,SAAS,CAAC6B,MAAV,CAAiBC;AAHH,GAAhB,CADS;AAMhBnB,EAAAA,SAAS,EAAEX,SAAS,CAACiC,IAAV,CAAeH;AANV,CAAlB;AASA,eAAexB,KAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n// ? import PORTAL\r\nimport { createPortal } from 'react-dom';\r\nimport styles from './Modal.module.css';\r\n\r\nconst modalRoot = document.querySelector('#modal__root');\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  // ? func\r\n  handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      this.props.funcClose();\r\n    }\r\n  };\r\n\r\n  handlerClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      this.props.funcClose();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, big } = this.props.value;\r\n\r\n    return createPortal(\r\n      <div className={styles.overlay} onClick={this.handlerClick}>\r\n        <div className={styles.modal}>\r\n          <img className={styles.img} src={big} alt={id} />\r\n        </div>\r\n      </div>,\r\n      modalRoot\r\n    );\r\n  }\r\n}\r\n\r\nModal.propTypes = {\r\n  value: PropTypes.shape({\r\n    big: PropTypes.string.isRequired,\r\n    id: PropTypes.number.isRequired,\r\n    small: PropTypes.string.isRequired,\r\n  }),\r\n  funcClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}